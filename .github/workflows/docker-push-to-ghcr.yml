name: Build and publish a Docker image to ghcr.io
on:

  # publish on releases, e.g. v2.1.13 (image tagged as "2.1.13" - "v" prefix is removed)
  release:
    types: [ published ]

  # publish on pushes to the main branch (image tagged as "latest")
  push:
    branches:
      - main
      
jobs:
  docker_publish:
    runs-on: "ubuntu-20.04"
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository }}
          # generate Docker tags based on the following events/attributes
          flavor: |
            latest=true
            prefix=
            suffix=
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}:buildcache,mode=max
          secrets: |
            "GITHUB_PAT=${{ secrets.GITHUB_TOKEN }}"
            
  singluarity-publish:
    runs-on: "ubuntu-20.04"
    container:
      image: quay.io/singularity/singularity
      options: --privileged
      
      - name: Build Container
        run: |
            sudo -E singularity pull container.sif ghcr.io/${{ github.repository }}:latest
            tag=singularity-latest
            # Build the container and name by tag
            echo "Tag is $tag."
            echo "tag=$tag" >> $GITHUB_ENV
      - name: Login and Deploy Container
        if: (github.event_name != 'pull_request')
        run: |         
            echo ${{ secrets.GITHUB_TOKEN }} | singularity remote login -u ${{ secrets.GHCR_USERNAME }} --password-stdin oras://ghcr.io
            singularity push container.sif oras://ghcr.io/${GITHUB_REPOSITORY}:${tag}

